sudo: required
dist: trusty
language: node_js
node_js:
  - 8.7.0
branches:
  only:
  - master
  - build
addons:
  chrome: stable
apt:
  sources:
    - google-chrome
  packages:
    - google-chrome-stable
    - google-chrome-beta

before_install:
  # all the deploy replated commends and ssh key are encrypted by travis
  - tar -xvf deploy_commands.tar
  - chmod 600 glimmpsev3uat.pem
  - chmod 700 deploy_docker.sh
  - chmod 700 docker_perserve.sh
  - chmod 700 ecr_user.sh
  - eval "$(ssh-agent -s)"
  - sudo ssh-add ${GIT_SSH_KEY}
  - git config --global user.name GIT_USER
  - git config --global user.email GIT_EMAIL
  - git remote set-url origin git@github.com:${GIT_USER}/${GIT_REPO}.git
  #activate chrome service
  - export CHROME_BIN=chromium-browser
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start

before_script:
  - npm install -g @angular/cli
  - npm install -g karma
  - npm install
script:
  - ./node_modules/.bin/karma start karma.conf.js --single-run --log-level=DEBUG

after_success:
#read the TAG_ENABLE param
  - |
    if [ ${TAG_ENABLE} == T ]; then
      echo start...
      if [ ${VER_BUMP} != patch -a ${VER_BUMP} != minor -a ${VER_BUMP} != major ]; then travis_terminate 1; fi
      git checkout master
      git add -A
      git commit -m "commit any changes happened in travis"
      npm version ${VER_BUMP} -m "version up data and re-deploy [skip ci]"
      git push origin master
      # build project since there is no error
      ng build --prod
      #install docker since the travis docker service version is too old
      curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      sudo apt-get update
      apt-cache policy docker-ce
      sudo apt-get install -y docker-ce
      # up data pip
      pip install -U pip
      #install awscli
      sudo pip install awscli --upgrade
      export PATH=~/.local/bin:$PATH
      #add Aws IAM user credentials to env
      mkdir -p ~/.aws
      ./ecr_user.sh
      # login ECR
      eval $(aws ecr get-login --no-include-email --region us-east-1)
      #create docker image and push to ECR
      ./docker_perserve.sh
      # deploy latest docker image to EC2
      ./deploy_docker.sh ;

    else echo "test pass, not update the version, not create a new image, not redeploy the app";
    fi

  - echo "done"
