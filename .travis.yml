sudo: required
dist: trusty
language: node_js
node_js:
- 8.7.0
branches:
  only:
  - master
  - VER3-252_buildProcess
addons:
  chrome: stable
apt:
  sources:
  - google-chrome
  packages:
  - google-chrome-stable
  - google-chrome-beta
env:
  global:
  - EC2_SSH_KEY=glimmpsev3uat.pem GIT_SSH_KEY=id_rsa EC2_URL=ec2-54-161-9-34.compute-1.amazonaws.com ECR_REPO=543872078551.dkr.ecr.us-east-1.amazonaws.com/glimmpse ECR_IMG=glimmpse GIT_MAIL=alasdair.macleod@ufl.edu GIT_USER=alasdair-macleod GIT_REPO=DemoAppFront
  - secure: vEG0gRlk5g4CuOTCOAotIOOUn+SU79lpeKGOsNPMIyiGw7IO0vgAy4u/EStUbt6xB/r70U8r747hsBufXmiAcjcpCHl2afUTntcGVQhHQwtYMsxYk6N6MbcmmSdz3MnPkKo+H5RLyxIj6hK0fftb8K7GEP7816RueCSMYv/dwLDLkEJpDvhJ8/DOLYysKO6I0zzOO5Khosu9+/QzEaq0JfOntLSXiqDC4o3EIwRuhu638B+ilV/bYLWp4Lu/x1QgJ4IxK/UJpOYO1/VwV6y0yX6alI73rqfb2yfcD7D0TP2ZPpuq/DR8WWoPYliaLIzqr/1w4IRrd3RmTolvMZgNb7EFD1O8WjokFusePzjSnm7a3d3gOxfKPObvEnpo3Abb48lbzjV5EPa5fcVqRL+FE8gUaviB/jPnnPFgAQ8I2ElM1CnvW4SS4t5mHaVoSFaQfhdl/6XjHldvmqSM1tmwV8kQ6aRSrSisQm1EJ4zQvkEHRRaL7edRkAwRZy+jHJxIEbySc18NoudOvfEXox67jGpRGyUe+oN6EZGQRjlwAxbXbJUujkTgY1K8PFSc7Mvfm1aj4/4y3/uKajlqXigUYOJ2TomoZPu5Fe5LaqTeiZd33kgZez/b3JoWyLkMyMFzVEfj0S5nesFBoO72m2hXL2pf35awUEgkKJ7GL8DKd54=
  - secure: CZty/HwFVpLmtjFr5/WnHI6faMO8hBbINzdU2QNyRnMzj9xdmjAozqUln0pluB+wwlyMSwZ/6ZwWMGvM6izF7wnmdrHAE4kuWqH0KBam+Tb51Ia+4RozNsaeoAU6CCnAqUbJnVIN7CXpbER5bW5avrQevKCeEGunwDwuH/Xy1vBrsp2SWB302u2cNsgjoOs+wVZc+Ae1a+3wwsdGpcrB3CY101daRh5Av00vaKsZOpT+u/VCMZHitwj9Vy1Pi+vmVIllsNn4X+loYpVMdNTBeo95+/24OEd7S/MGSjl6dHgqSZ0mYEZ/xhOFJ3iI36xW4Duv5GnWCpmaaW9binaH0PV1FDrORZu2g1DXlfohhmnzFvvoiunIFK3OTm0JlO5X9+QZxtTH4ITxQ05f7y48RN1mUPUQqlVbiL55x0qP3TfoM+xGCEh8S0lbAVGy+a05qqtlbzy10DESuv4HmdzvvbHPKpgrI7cfaKUigf8kBBl1K8l/jPWAcRYajbihpTi6uvyq+98vgCBHgay+QAMFCEj/yziNwKnqr0JKX0Fs6n7WS3UT7pUj8mlMnPm6G4JLrVB2kPYZsW8eqIS2QXvgZXGGJEhD1mu4paFgon5zhc0Hc3V06lCkvNcQF5eeu+V9L8pHpMTvfaf7XEUTnEMFzhjneEM4r2UIh0yRbLfFI4U=
before_install:
- openssl aes-256-cbc -K $encrypted_ac40f3edab40_key -iv $encrypted_ac40f3edab40_iv
  -in secrets_keys.tar.enc -out secrets_keys.tar -d
- tar xvf secrets_keys.tar
- chmod 600 glimmpsev3uat.pem
- chmod 600 id_rsa
- eval "$(ssh-agent -s)"
- sudo ssh-add ${GIT_SSH_KEY}
- git config --global user.name GIT_USER
- git config --global user.email GIT_EMAIL
- git remote set-url origin git@github.com:${GIT_USER}/${GIT_REPO}.git
- export CHROME_BIN=chromium-browser
- export DISPLAY=:99.0
- sh -e /etc/init.d/xvfb start
before_script:
- npm install -g @angular/cli
- npm install -g karma
- npm install
script:
- "./node_modules/.bin/karma start karma.conf.js --single-run --log-level=DEBUG"
after_success:
- |
  echo $TAG_ENABLE
  if [ $TAG_ENABLE == True ]; then
    # #############################################################################################################
    # increment version
    # #############################################################################################################
    echo start...
    git status
    if [ $BUILD_TYPE != patch -a $BUILD_TYPE != minor -a $BUILD_TYPE != major ]; then travis_terminate 1; fi
    npm version $BUILD_TYPE -m "updating version and deploying [skip ci]"
    # #############################################################################################################
    # build project since there is no error
    # #############################################################################################################
    ng build --prod
    # #############################################################################################################
    # install docker as the travis docker service version is too old
    # #############################################################################################################
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    sudo apt-get update
    apt-cache policy docker-ce
    sudo apt-get install -y docker-ce
    # up data pip
    pip install -U pip
    # #############################################################################################################
    # install awscli
    # #############################################################################################################
    sudo pip install awscli --upgrade
    export PATH=~/.local/bin:$PATH
    # #############################################################################################################
    # add Aws IAM user credentials to env
    # #############################################################################################################
    mkdir -p ~/.aws
    - chmod 777 ./scripts
    - chmod 777 ./scripts/ecr_user.sh
    - chmod 777 ./scripts/docker_preserve.sh
    - chmod 777 ./scripts/docker_deploy.sh
    ./scripts/ecr_user.sh
    # #############################################################################################################
    # login ECR
    # #############################################################################################################
    eval $(aws ecr get-login --no-include-email --region us-east-1)
    # #############################################################################################################
    # create docker image and push to ECR
    # #############################################################################################################
    ./scripts/docker_preserve.sh
    # #############################################################################################################
    # deploy latest docker image to EC2
    # #############################################################################################################
    ./scripts/docker_deploy.sh ;
  else echo "All tests passed.";
  fi
- echo "done"
